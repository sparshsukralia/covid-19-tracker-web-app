{"version":3,"sources":["App.module.css","components/Cards/Cards.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Cards/Cards.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","date","Date","toLocaleDateString","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","numbers1","start","end","value","duration","separator","numbers2","numbers3","url","fetchData","country","a","changeableUrl","axios","get","fetchCountries","countries","map","name","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","heading","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad2e4966.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"App_heading__V6ZqE\",\"subHeading\":\"App_subHeading__3gXQv\",\"container\":\"App_container__GlPSg\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  console.log(lastUpdate);\r\n  if (!confirmed) {\r\n    return \"loading..\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <h3 className={styles.date}>\r\n        Latest of Date: {new Date(lastUpdate).toLocaleDateString()}\r\n      </h3>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              <h1>Infected</h1>\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <h1 className={styles.numbers1}>\r\n                <CountUp\r\n                  start={0}\r\n                  end={confirmed.value}\r\n                  duration={2.5}\r\n                  separator=\",\"\r\n                />\r\n              </h1>\r\n            </Typography>\r\n            <Typography color=\"textSecondary\"></Typography>\r\n            <Typography variant=\"body2\">\r\n              <h2>Total cases of COVID-19</h2>\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              <h1>Recovered</h1>\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <h1 className={styles.numbers2}>\r\n                <CountUp\r\n                  start={0}\r\n                  end={recovered.value}\r\n                  duration={2.5}\r\n                  separator=\",\"\r\n                />\r\n              </h1>\r\n            </Typography>\r\n            <Typography color=\"textSecondary\"></Typography>{\" \"}\r\n            <Typography variant=\"body2\">\r\n              <h2>Recoveries from COVID-19</h2>\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              <h1>Deaths</h1>\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <h1 className={styles.numbers3}>\r\n                <CountUp\r\n                  start={0}\r\n                  end={deaths.value}\r\n                  duration={2.5}\r\n                  separator=\",\"\r\n                />\r\n              </h1>\r\n            </Typography>\r\n            <Typography color=\"textSecondary\"></Typography>{\" \"}\r\n            <Typography variant=\"body2\">\r\n              <h2>Deaths from COVID-19</h2>\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=\"global\">Global</option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport Cards from \"./components/Cards/Cards\";\r\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <h1 className={styles.heading}>COVID-19 TRACKER</h1>\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Cards data={data} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3FsUT\",\"date\":\"Cards_date__2VXLp\",\"card\":\"Cards_card__3avzp\",\"numbers1\":\"Cards_numbers1__3NlIc\",\"numbers2\":\"Cards_numbers2___IB-R\",\"numbers3\":\"Cards_numbers3__1YaQf\",\"infected\":\"Cards_infected__Z6MsW\",\"recovered\":\"Cards_recovered__FuNah\",\"deaths\":\"Cards_deaths__3EURI\"};"],"sourceRoot":""}