{"version":3,"sources":["App.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","components/CountryPicker/CountryPicker.jsx","api/index.js","App.js","index.js"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","numbers1","start","end","value","duration","separator","Date","toDateString","numbers2","numbers3","CountryPicker","url","fetchData","a","axios","get","App","state","fetchedData","this","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b969b2c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__GlPSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3FsUT\",\"card\":\"Cards_card__3avzp\",\"numbers1\":\"Cards_numbers1__3NlIc\",\"numbers2\":\"Cards_numbers2___IB-R\",\"numbers3\":\"Cards_numbers3__1YaQf\",\"infected\":\"Cards_infected__Z6MsW\",\"recovered\":\"Cards_recovered__FuNah\",\"deaths\":\"Cards_deaths__3EURI\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  console.log(confirmed);\r\n  if (!confirmed) {\r\n    return \"loading..\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              <h1>Infected</h1>\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <h1 className={styles.numbers1}>\r\n                <CountUp\r\n                  start={0}\r\n                  end={confirmed.value}\r\n                  duration={2.5}\r\n                  separator=\",\"\r\n                />\r\n              </h1>\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              <h3>{new Date(lastUpdate).toDateString()}</h3>\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              <h2>Active Cases of Covid-19</h2>\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              <h1>Recovered</h1>\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <h1 className={styles.numbers2}>\r\n                <CountUp\r\n                  start={0}\r\n                  end={recovered.value}\r\n                  duration={2.5}\r\n                  separator=\",\"\r\n                />\r\n              </h1>\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              <h3>{new Date(lastUpdate).toDateString()}</h3>\r\n            </Typography>{\" \"}\r\n            <Typography variant=\"body2\">\r\n              <h2>Recoveries from Covid-19</h2>\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              <h1>Deaths</h1>\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <h1 className={styles.numbers3}>\r\n                <CountUp\r\n                  start={0}\r\n                  end={deaths.value}\r\n                  duration={2.5}\r\n                  separator=\",\"\r\n                />\r\n              </h1>\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              <h3>{new Date(lastUpdate).toDateString()}</h3>\r\n            </Typography>{\" \"}\r\n            <Typography variant=\"body2\">\r\n              <h2>Deaths from Covid-19</h2>\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\n\r\nconst CountryPicker = () => {\r\n  return <h1></h1>;\r\n};\r\n\r\nexport default CountryPicker;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(url);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {}\r\n};\r\n","import React from \"react\";\r\nimport Cards from \"./components/Cards/Cards\";\r\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <Cards data={data} />\r\n        <CountryPicker />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}